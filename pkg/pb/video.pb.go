// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: pkg/proto/video.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type UploadVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	AvatarId    string `protobuf:"bytes,2,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	Intrest     string `protobuf:"bytes,3,opt,name=intrest,proto3" json:"intrest,omitempty"`
	ThumbnailId string `protobuf:"bytes,4,opt,name=thumbnailId,proto3" json:"thumbnailId,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Discription string `protobuf:"bytes,6,opt,name=discription,proto3" json:"discription,omitempty"`
	Filename    string `protobuf:"bytes,7,opt,name=filename,proto3" json:"filename,omitempty"`
	UserId      string `protobuf:"bytes,8,opt,name=userId,proto3" json:"userId,omitempty"`
	Data        []byte `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadVideoRequest) Reset() {
	*x = UploadVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoRequest) ProtoMessage() {}

func (x *UploadVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoRequest.ProtoReflect.Descriptor instead.
func (*UploadVideoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{2}
}

func (x *UploadVideoRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UploadVideoRequest) GetAvatarId() string {
	if x != nil {
		return x.AvatarId
	}
	return ""
}

func (x *UploadVideoRequest) GetIntrest() string {
	if x != nil {
		return x.Intrest
	}
	return ""
}

func (x *UploadVideoRequest) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

func (x *UploadVideoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadVideoRequest) GetDiscription() string {
	if x != nil {
		return x.Discription
	}
	return ""
}

func (x *UploadVideoRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadVideoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadVideoRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	VideoId string `protobuf:"bytes,3,opt,name=videoId,proto3" json:"videoId,omitempty"`
}

func (x *UploadVideoResponse) Reset() {
	*x = UploadVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoResponse) ProtoMessage() {}

func (x *UploadVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoResponse.ProtoReflect.Descriptor instead.
func (*UploadVideoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{3}
}

func (x *UploadVideoResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UploadVideoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadVideoResponse) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

type StreamVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId string `protobuf:"bytes,1,opt,name=videoId,proto3" json:"videoId,omitempty"`
}

func (x *StreamVideoRequest) Reset() {
	*x = StreamVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamVideoRequest) ProtoMessage() {}

func (x *StreamVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamVideoRequest.ProtoReflect.Descriptor instead.
func (*StreamVideoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{4}
}

func (x *StreamVideoRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

type StreamVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoChunk []byte `protobuf:"bytes,1,opt,name=video_chunk,json=videoChunk,proto3" json:"video_chunk,omitempty"`
}

func (x *StreamVideoResponse) Reset() {
	*x = StreamVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamVideoResponse) ProtoMessage() {}

func (x *StreamVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamVideoResponse.ProtoReflect.Descriptor instead.
func (*StreamVideoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{5}
}

func (x *StreamVideoResponse) GetVideoChunk() []byte {
	if x != nil {
		return x.VideoChunk
	}
	return nil
}

type FindArchivedVideoByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *FindArchivedVideoByUserIdRequest) Reset() {
	*x = FindArchivedVideoByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindArchivedVideoByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindArchivedVideoByUserIdRequest) ProtoMessage() {}

func (x *FindArchivedVideoByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindArchivedVideoByUserIdRequest.ProtoReflect.Descriptor instead.
func (*FindArchivedVideoByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{6}
}

func (x *FindArchivedVideoByUserIdRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type FetchVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId     string `protobuf:"bytes,1,opt,name=VideoId,proto3" json:"VideoId,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	AvatarId    string `protobuf:"bytes,3,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	Intrest     string `protobuf:"bytes,4,opt,name=intrest,proto3" json:"intrest,omitempty"`
	ThumbnailId string `protobuf:"bytes,5,opt,name=thumbnailId,proto3" json:"thumbnailId,omitempty"`
	Title       string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	S3Path      string `protobuf:"bytes,7,opt,name=S3Path,proto3" json:"S3Path,omitempty"`
	Archived    bool   `protobuf:"varint,8,opt,name=archived,proto3" json:"archived,omitempty"`
	Views       uint32 `protobuf:"varint,9,opt,name=views,proto3" json:"views,omitempty"`
	Starred     uint32 `protobuf:"varint,10,opt,name=starred,proto3" json:"starred,omitempty"`
}

func (x *FetchVideo) Reset() {
	*x = FetchVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchVideo) ProtoMessage() {}

func (x *FetchVideo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchVideo.ProtoReflect.Descriptor instead.
func (*FetchVideo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{7}
}

func (x *FetchVideo) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *FetchVideo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FetchVideo) GetAvatarId() string {
	if x != nil {
		return x.AvatarId
	}
	return ""
}

func (x *FetchVideo) GetIntrest() string {
	if x != nil {
		return x.Intrest
	}
	return ""
}

func (x *FetchVideo) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

func (x *FetchVideo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FetchVideo) GetS3Path() string {
	if x != nil {
		return x.S3Path
	}
	return ""
}

func (x *FetchVideo) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *FetchVideo) GetViews() uint32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *FetchVideo) GetStarred() uint32 {
	if x != nil {
		return x.Starred
	}
	return 0
}

type FindArchivedVideoByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Videos []*FetchVideo `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
}

func (x *FindArchivedVideoByUserIdResponse) Reset() {
	*x = FindArchivedVideoByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindArchivedVideoByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindArchivedVideoByUserIdResponse) ProtoMessage() {}

func (x *FindArchivedVideoByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindArchivedVideoByUserIdResponse.ProtoReflect.Descriptor instead.
func (*FindArchivedVideoByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{8}
}

func (x *FindArchivedVideoByUserIdResponse) GetVideos() []*FetchVideo {
	if x != nil {
		return x.Videos
	}
	return nil
}

type FindUserVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *FindUserVideoRequest) Reset() {
	*x = FindUserVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserVideoRequest) ProtoMessage() {}

func (x *FindUserVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserVideoRequest.ProtoReflect.Descriptor instead.
func (*FindUserVideoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{9}
}

func (x *FindUserVideoRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type FindUserVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Videos []*FetchVideo `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
}

func (x *FindUserVideoResponse) Reset() {
	*x = FindUserVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserVideoResponse) ProtoMessage() {}

func (x *FindUserVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserVideoResponse.ProtoReflect.Descriptor instead.
func (*FindUserVideoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{10}
}

func (x *FindUserVideoResponse) GetVideos() []*FetchVideo {
	if x != nil {
		return x.Videos
	}
	return nil
}

type FetchAllVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FetchAllVideoRequest) Reset() {
	*x = FetchAllVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllVideoRequest) ProtoMessage() {}

func (x *FetchAllVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllVideoRequest.ProtoReflect.Descriptor instead.
func (*FetchAllVideoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{11}
}

type FetchAllVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Videos []*FetchVideo `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
}

func (x *FetchAllVideoResponse) Reset() {
	*x = FetchAllVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllVideoResponse) ProtoMessage() {}

func (x *FetchAllVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllVideoResponse.ProtoReflect.Descriptor instead.
func (*FetchAllVideoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{12}
}

func (x *FetchAllVideoResponse) GetVideos() []*FetchVideo {
	if x != nil {
		return x.Videos
	}
	return nil
}

type GetVideoByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId  string `protobuf:"bytes,1,opt,name=videoId,proto3" json:"videoId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *GetVideoByIdRequest) Reset() {
	*x = GetVideoByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdRequest) ProtoMessage() {}

func (x *GetVideoByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdRequest.ProtoReflect.Descriptor instead.
func (*GetVideoByIdRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{13}
}

func (x *GetVideoByIdRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *GetVideoByIdRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GetVideoByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId     string `protobuf:"bytes,1,opt,name=VideoId,proto3" json:"VideoId,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	AvatarId    string `protobuf:"bytes,3,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	Intrest     string `protobuf:"bytes,4,opt,name=intrest,proto3" json:"intrest,omitempty"`
	ThumbnailId string `protobuf:"bytes,5,opt,name=thumbnailId,proto3" json:"thumbnailId,omitempty"`
	Title       string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	S3Path      string `protobuf:"bytes,7,opt,name=S3Path,proto3" json:"S3Path,omitempty"`
	Archived    bool   `protobuf:"varint,8,opt,name=archived,proto3" json:"archived,omitempty"`
	IsStarred   bool   `protobuf:"varint,9,opt,name=isStarred,proto3" json:"isStarred,omitempty"`
	Views       uint32 `protobuf:"varint,10,opt,name=views,proto3" json:"views,omitempty"`
	Starred     uint32 `protobuf:"varint,11,opt,name=starred,proto3" json:"starred,omitempty"`
}

func (x *GetVideoByIdResponse) Reset() {
	*x = GetVideoByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdResponse) ProtoMessage() {}

func (x *GetVideoByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdResponse.ProtoReflect.Descriptor instead.
func (*GetVideoByIdResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{14}
}

func (x *GetVideoByIdResponse) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *GetVideoByIdResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetVideoByIdResponse) GetAvatarId() string {
	if x != nil {
		return x.AvatarId
	}
	return ""
}

func (x *GetVideoByIdResponse) GetIntrest() string {
	if x != nil {
		return x.Intrest
	}
	return ""
}

func (x *GetVideoByIdResponse) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

func (x *GetVideoByIdResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetVideoByIdResponse) GetS3Path() string {
	if x != nil {
		return x.S3Path
	}
	return ""
}

func (x *GetVideoByIdResponse) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *GetVideoByIdResponse) GetIsStarred() bool {
	if x != nil {
		return x.IsStarred
	}
	return false
}

func (x *GetVideoByIdResponse) GetViews() uint32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *GetVideoByIdResponse) GetStarred() uint32 {
	if x != nil {
		return x.Starred
	}
	return 0
}

type ArchiveVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId uint32 `protobuf:"varint,1,opt,name=videoId,proto3" json:"videoId,omitempty"`
}

func (x *ArchiveVideoRequest) Reset() {
	*x = ArchiveVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveVideoRequest) ProtoMessage() {}

func (x *ArchiveVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveVideoRequest.ProtoReflect.Descriptor instead.
func (*ArchiveVideoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{15}
}

func (x *ArchiveVideoRequest) GetVideoId() uint32 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type ArchiveVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ArchiveVideoResponse) Reset() {
	*x = ArchiveVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveVideoResponse) ProtoMessage() {}

func (x *ArchiveVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveVideoResponse.ProtoReflect.Descriptor instead.
func (*ArchiveVideoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{16}
}

func (x *ArchiveVideoResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ToggleStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId  string `protobuf:"bytes,1,opt,name=videoId,proto3" json:"videoId,omitempty"`
	UserNAme string `protobuf:"bytes,2,opt,name=userNAme,proto3" json:"userNAme,omitempty"`
	Starred  bool   `protobuf:"varint,3,opt,name=starred,proto3" json:"starred,omitempty"`
}

func (x *ToggleStarRequest) Reset() {
	*x = ToggleStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleStarRequest) ProtoMessage() {}

func (x *ToggleStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleStarRequest.ProtoReflect.Descriptor instead.
func (*ToggleStarRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{17}
}

func (x *ToggleStarRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *ToggleStarRequest) GetUserNAme() string {
	if x != nil {
		return x.UserNAme
	}
	return ""
}

func (x *ToggleStarRequest) GetStarred() bool {
	if x != nil {
		return x.Starred
	}
	return false
}

type ToggleStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ToggleStarResponse) Reset() {
	*x = ToggleStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_video_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleStarResponse) ProtoMessage() {}

func (x *ToggleStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_video_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleStarResponse.ProtoReflect.Descriptor instead.
func (*ToggleStarResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_video_proto_rawDescGZIP(), []int{18}
}

func (x *ToggleStarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_pkg_proto_video_proto protoreflect.FileDescriptor

var file_pkg_proto_video_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x1d, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88,
	0x02, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x13, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x12,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x13,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0x3e, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x0a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x33, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x33, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x21, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0x32, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x15,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0x16, 0x0a,
	0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x15, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c,
	0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x33, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x33, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x72,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x72,
	0x65, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x63, 0x0a, 0x11, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x41, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x41, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xc1, 0x04, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x6a, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_video_proto_rawDescOnce sync.Once
	file_pkg_proto_video_proto_rawDescData = file_pkg_proto_video_proto_rawDesc
)

func file_pkg_proto_video_proto_rawDescGZIP() []byte {
	file_pkg_proto_video_proto_rawDescOnce.Do(func() {
		file_pkg_proto_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_video_proto_rawDescData)
	})
	return file_pkg_proto_video_proto_rawDescData
}

var file_pkg_proto_video_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_pkg_proto_video_proto_goTypes = []interface{}{
	(*Request)(nil),                           // 0: pb.Request
	(*Response)(nil),                          // 1: pb.Response
	(*UploadVideoRequest)(nil),                // 2: pb.UploadVideoRequest
	(*UploadVideoResponse)(nil),               // 3: pb.UploadVideoResponse
	(*StreamVideoRequest)(nil),                // 4: pb.StreamVideoRequest
	(*StreamVideoResponse)(nil),               // 5: pb.StreamVideoResponse
	(*FindArchivedVideoByUserIdRequest)(nil),  // 6: pb.FindArchivedVideoByUserIdRequest
	(*FetchVideo)(nil),                        // 7: pb.FetchVideo
	(*FindArchivedVideoByUserIdResponse)(nil), // 8: pb.FindArchivedVideoByUserIdResponse
	(*FindUserVideoRequest)(nil),              // 9: pb.FindUserVideoRequest
	(*FindUserVideoResponse)(nil),             // 10: pb.FindUserVideoResponse
	(*FetchAllVideoRequest)(nil),              // 11: pb.FetchAllVideoRequest
	(*FetchAllVideoResponse)(nil),             // 12: pb.FetchAllVideoResponse
	(*GetVideoByIdRequest)(nil),               // 13: pb.GetVideoByIdRequest
	(*GetVideoByIdResponse)(nil),              // 14: pb.GetVideoByIdResponse
	(*ArchiveVideoRequest)(nil),               // 15: pb.ArchiveVideoRequest
	(*ArchiveVideoResponse)(nil),              // 16: pb.ArchiveVideoResponse
	(*ToggleStarRequest)(nil),                 // 17: pb.ToggleStarRequest
	(*ToggleStarResponse)(nil),                // 18: pb.ToggleStarResponse
}
var file_pkg_proto_video_proto_depIdxs = []int32{
	7,  // 0: pb.FindArchivedVideoByUserIdResponse.videos:type_name -> pb.FetchVideo
	7,  // 1: pb.FindUserVideoResponse.videos:type_name -> pb.FetchVideo
	7,  // 2: pb.FetchAllVideoResponse.videos:type_name -> pb.FetchVideo
	0,  // 3: pb.VideoService.HealthCheck:input_type -> pb.Request
	2,  // 4: pb.VideoService.UploadVideo:input_type -> pb.UploadVideoRequest
	6,  // 5: pb.VideoService.FindArchivedVideoByUserId:input_type -> pb.FindArchivedVideoByUserIdRequest
	9,  // 6: pb.VideoService.FindUserVideo:input_type -> pb.FindUserVideoRequest
	15, // 7: pb.VideoService.ArchiveVideo:input_type -> pb.ArchiveVideoRequest
	11, // 8: pb.VideoService.FetchAllVideo:input_type -> pb.FetchAllVideoRequest
	13, // 9: pb.VideoService.GetVideoById:input_type -> pb.GetVideoByIdRequest
	17, // 10: pb.VideoService.ToggleStar:input_type -> pb.ToggleStarRequest
	1,  // 11: pb.VideoService.HealthCheck:output_type -> pb.Response
	3,  // 12: pb.VideoService.UploadVideo:output_type -> pb.UploadVideoResponse
	8,  // 13: pb.VideoService.FindArchivedVideoByUserId:output_type -> pb.FindArchivedVideoByUserIdResponse
	10, // 14: pb.VideoService.FindUserVideo:output_type -> pb.FindUserVideoResponse
	16, // 15: pb.VideoService.ArchiveVideo:output_type -> pb.ArchiveVideoResponse
	12, // 16: pb.VideoService.FetchAllVideo:output_type -> pb.FetchAllVideoResponse
	14, // 17: pb.VideoService.GetVideoById:output_type -> pb.GetVideoByIdResponse
	18, // 18: pb.VideoService.ToggleStar:output_type -> pb.ToggleStarResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_proto_video_proto_init() }
func file_pkg_proto_video_proto_init() {
	if File_pkg_proto_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindArchivedVideoByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindArchivedVideoByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_video_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_video_proto_goTypes,
		DependencyIndexes: file_pkg_proto_video_proto_depIdxs,
		MessageInfos:      file_pkg_proto_video_proto_msgTypes,
	}.Build()
	File_pkg_proto_video_proto = out.File
	file_pkg_proto_video_proto_rawDesc = nil
	file_pkg_proto_video_proto_goTypes = nil
	file_pkg_proto_video_proto_depIdxs = nil
}
