syntax = "proto3";

package pb;

option go_package = "./pkg/pb";

service VideoService {
    rpc HealthCheck(Request) returns (Response);
    rpc UploadVideo(stream UploadVideoRequest) returns (UploadVideoResponse) {}
    rpc FindArchivedVideoByUserId(FindArchivedVideoByUserIdRequest) returns (FindArchivedVideoByUserIdResponse) {}
    rpc FindUserVideo(FindUserVideoRequest) returns (FindUserVideoResponse) {}
    rpc ArchiveVideo(ArchiveVideoRequest) returns (ArchiveVideoResponse) {}
    rpc FetchAllVideo(FetchAllVideoRequest) returns (FetchAllVideoResponse) {}
    rpc GetVideoById(GetVideoByIdRequest) returns (GetVideoByIdResponse) {}
    rpc ToggleStar(ToggleStarRequest) returns (ToggleStarResponse) {}
    rpc BlockVideo(BlockVideoRequest) returns (BlockVideoResponse) {}
    rpc GetReportedVideos(GetReportedVideosRequest) returns (GetReportedVideosResponse) {}
    rpc ReportVideo(ReportVideoRequest) returns (ReportVideoResponse) {}

}

message Request {
    string data = 1;
  }
  
  message Response {
    string result = 1;
  }
  

message UploadVideoRequest {
    string userName = 1;
    string avatarId = 2;
    string intrest = 3;
    string thumbnailId = 4;
    string title = 5;
    string discription = 6;
    string filename = 7;
    string userId = 8;
    bytes data = 9;
}

message UploadVideoResponse {
    int32 status = 1;
    string message = 2;
    string videoId = 3;
}

message StreamVideoRequest {
    string videoId = 1;
}

message StreamVideoResponse {
    bytes video_chunk = 1;
}

message FindArchivedVideoByUserIdRequest {
    string userName = 1;
}

message FetchVideo {
    string VideoId = 1;
    string userName = 2;
    string avatarId = 3;
    string intrest = 4;
    string thumbnailId = 5;
    string title = 6;
    string S3Path = 7;
    bool archived = 8;
    uint32 views = 9;
    uint32 starred = 10;
}

message FindArchivedVideoByUserIdResponse {
    repeated FetchVideo videos = 1;
}

message FindUserVideoRequest {
    string userName =1;
}

message FindUserVideoResponse {
    repeated FetchVideo videos = 1;
}

message FetchAllVideoRequest {

}

message FetchAllVideoResponse {
    repeated FetchVideo videos = 1;
}

message GetVideoByIdRequest {
    string videoId = 1;
    string userName = 2;
}
message GetVideoByIdResponse {
    string VideoId = 1;
    string userName = 2;
    string avatarId = 3;
    string intrest = 4;
    string thumbnailId = 5;
    string title = 6;
    string S3Path = 7;
    bool archived = 8; 
    bool isStarred = 9; 
    uint32 views = 10;
    uint32 starred = 11; 
}

message ArchiveVideoRequest {
    uint32 videoId = 1;
}
message ArchiveVideoResponse{
    bool status = 1;
}

message ToggleStarRequest {
  string videoId = 1;
  string userNAme = 2;
  bool starred = 3;
}
message ToggleStarResponse {
   bool status = 1; 
}

message BlockVideoRequest {
    string videoId = 1;
    string Reason = 2;
    bool block = 3;
}
message BlockVideoResponse {
    bool blocked = 1;
}


message ReportedVideos {
    string VideoId = 1;
    string userName = 2;
    string avatarId = 3;
    string intrest = 4;
    string thumbnailId = 5;
    string title = 6;
    string S3Path = 7;
    bool archived = 8; 
    uint32 views = 9;
    uint32 starred = 10; 
    bool blocked = 11;
    bool Exclisive = 12;
    uint32 coin = 13;
    string reason = 14;
}

message GetReportedVideosRequest {

}
message GetReportedVideosResponse {
    repeated ReportedVideos videos = 1;

 
}

message ReportVideoRequest {
    string videoId = 1;
    string reason = 2;
}
message ReportVideoResponse {
    bool status = 1;
}